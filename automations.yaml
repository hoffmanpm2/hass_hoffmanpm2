# Receive an alert at sunrise when there is a significant chance of rain in the forecast.
# Turn on lights and unlock doors in the event of an emergency.

  - alias: 'Away'
    trigger:
      - platform: state
        entity_id: sensor.away_mode_downstairs
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: sensor.away_mode_upstairs
        from: 'off'
        to: 'on'
    action:
      service: script.turn_on
      entity_id: script.activate_away_mode

  - alias: 'Home'
    trigger:
      - platform: state
        entity_id: sensor.away_mode_downstairs
        from: 'on'
        to: 'off'
      - platform: state
        entity_id: sensor.away_mode_downstairs
        from: 'on'
        to: 'off'
    action:
      service: script.turn_on
      entity_id: script.deactivate_away_mode

  - alias: 'Home Assistant Start'
    trigger:
      - platform: homeassistant
        event: start
    action:
      service: frontend.set_theme
      data:
        name: PmxMononight

  - alias: 'One-Time Alarm Clock'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.onetime_alarm_clock_time.state }}'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.onetime_alarm_clock_status
          state: 'on'
        - condition: template
          value_template: "{{ is_state('sensor.away_mode_upstairs', 'off') }}"
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.workday
              state: 'off'
            - condition: state
              entity_id: calendar.day_off
              state: 'on'
    action:
      service: script.turn_on
      entity_id: script.activate_onetime_alarm_clock

  - alias: 'Before Sunset'
    trigger:
      - platform: sun
        event: sunset
        offset: "-00:45:00"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('sensor.away_mode_downstairs', 'off') }}"
        - condition: state
          entity_id: calendar.vacation
          state: 'off'
    action:
      service: script.turn_on
      entity_id: script.activate_evening_lights

  - alias: 'Sunset'
    trigger:
      - platform: sun
        event: sunset
    action:
      service: script.turn_on
      entity_id: script.activate_outdoor_lights

  - alias: 'Vacation'
    trigger:
      - platform: state
        entity_id: calendar.vacation
        from: 'off'
        to: 'on'
    action:
      service: script.turn_on
      entity_id: script.activate_vacation_mode

  - alias: 'Vacuum Downstairs'
    trigger:
      - platform: time
        at: '14:00:00'
    condition:
      condition: and
      conditions:
        - condition: time
          weekday:
            - tue
            - thu
            - sat
        - condition: state
          entity_id: calendar.vacation
          state: 'off'
    action:
      service: ifttt.trigger
      data: { "event": "VacuumDownstairs" }

  - alias: 'Vacuum Upstairs'
    trigger:
      - platform: time
        at: '16:00:00'
    condition:
      condition: and
      conditions:
        - condition: time
          weekday:
            - tue
            - thu
            - sat
        - condition: state
          entity_id: calendar.vacation
          state: 'off'
    action:
      service: ifttt.trigger
      data: { "event": "VacuumUpstairs" }

#  - alias: 'Weather Alert'
#    trigger:
#      - platform: numeric_state
#        entity_id: sensor.pws_alerts
#        above: 0
#    condition:
#      condition: or
#      conditions:
#        - condition: template
#          value_template: "{{ is_state_attr('sensor.pws_alerts', 'Description', 'Tornado Warning') }}"
#        - condition: template
#          value_template: "{{ is_state_attr('sensor.pws_alerts', 'Description', 'Severe Thunderstorm Warning') }}"
#        - condition: template
#          value_template: "{{ is_state_attr('sensor.pws_alerts', 'Description', 'Winter Storm Warning') }}"
#        - condition: template
#          value_template: "{{ is_state_attr('sensor.pws_alerts', 'Description', 'Winter Weather Advisory') }}"
#    action:
#      service: notify.gcm
#      data:
#        message: 'The National Weather Service has issued a {{ sensor.pws_alerts.attributes.Description }} for your area.'

  - alias: 'Weekday Alarm Clock'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.weekday_alarm_clock_time.state }}'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.weekday_alarm_clock_status
          state: 'on'
        - condition: state
          entity_id: binary_sensor.workday
          state: 'on'
        - condition: state
          entity_id: calendar.day_off
          state: 'off'
        - condition: state
          entity_id: calendar.vacation
          state: 'off'
        - condition: template
          value_template: "{{ is_state('sensor.away_mode_upstairs', 'off') }}"
    action:
      service: script.turn_on
      entity_id: script.activate_alarm_clock

  - alias: 'Weekday Morning'
    trigger:
      - platform: time
        at: '06:00:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday
          state: 'on'
        - condition: state
          entity_id: calendar.day_off
          state: 'off'
        - condition: state
          entity_id: calendar.vacation
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: sensor.away_mode_downstairs
              state: 'off'
            - condition: state
              entity_id: sensor.away_mode_upstairs
              state: 'off'
    action:
      service: script.turn_on
      entity_id: script.good_morning

  - alias: 'Weekday Night'
    trigger:
      - platform: time
        at: '23:00:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday_tomorrow
          state: 'on'
        - condition: state
          entity_id: calendar.day_off
          state: 'off'
        - condition: state
          entity_id: calendar.vacation
          state: 'off'
    action:
      service: script.turn_on
      entity_id: script.good_night

  - alias: 'Weekend Alarm Clock'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.weekend_alarm_clock_time.state }}'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.weekend_alarm_clock_status
          state: 'on'
        - condition: state
          entity_id: sensor.away_mode_upstairs
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.workday
              state: 'off'
            - condition: state
              entity_id: calendar.day_off
              state: 'on'
            - condition: state
              entity_id: calendar.vacation
              state: 'on'
    action:
      service: script.turn_on
      entity_id: script.activate_alarm_clock

  - alias: 'Weekend Morning'
    trigger:
      - platform: time
        at: '07:00:00'
    condition:
      condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.workday
              state: 'off'
            - condition: state
              entity_id: calendar.day_off
              state: 'on'
            - condition: state
              entity_id: calendar.vacation
              state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: sensor.away_mode_downstairs
              state: 'off'
            - condition: state
              entity_id: sensor.away_mode_upstairs
              state: 'off'
    action:
      service: script.turn_on
      entity_id: script.good_morning

  - alias: 'Weekend Night'
    trigger:
      - platform: time
        at: '00:00:00'
    action:
      service: script.turn_on
      entity_id: script.good_night


